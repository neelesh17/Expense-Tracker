[{"/home/neelesh/My Space/Coding/web-dev/expense_tracker/src/App.js":"1","/home/neelesh/My Space/Coding/web-dev/expense_tracker/src/index.js":"2","/home/neelesh/My Space/Coding/web-dev/expense_tracker/src/components/Details/styles.js":"3","/home/neelesh/My Space/Coding/web-dev/expense_tracker/src/styles.js":"4","/home/neelesh/My Space/Coding/web-dev/expense_tracker/src/components/Main/styles.js":"5","/home/neelesh/My Space/Coding/web-dev/expense_tracker/src/components/Main/main.jsx":"6","/home/neelesh/My Space/Coding/web-dev/expense_tracker/src/components/Main/Form/form.jsx":"7","/home/neelesh/My Space/Coding/web-dev/expense_tracker/src/components/Main/Form/styles.js":"8","/home/neelesh/My Space/Coding/web-dev/expense_tracker/src/components/Main/List/styles.js":"9","/home/neelesh/My Space/Coding/web-dev/expense_tracker/src/components/Main/List/list.jsx":"10","/home/neelesh/My Space/Coding/web-dev/expense_tracker/src/context/contextReducer.js":"11","/home/neelesh/My Space/Coding/web-dev/expense_tracker/src/components/Details/details.jsx":"12","/home/neelesh/My Space/Coding/web-dev/expense_tracker/src/context/context.js":"13","/home/neelesh/My Space/Coding/web-dev/expense_tracker/src/context/constants.js":"14","/home/neelesh/My Space/Coding/web-dev/expense_tracker/src/constants/categories.js":"15","/home/neelesh/My Space/Coding/web-dev/expense_tracker/src/utils/formatDate.js":"16","/home/neelesh/My Space/Coding/web-dev/expense_tracker/src/useTransactions.js":"17","/home/neelesh/My Space/Coding/web-dev/expense_tracker/src/components/Snackbar/styles.js":"18","/home/neelesh/My Space/Coding/web-dev/expense_tracker/src/components/Snackbar/snackbar.jsx":"19","/home/neelesh/My Space/Coding/web-dev/expense_tracker/src/components/InfoCard.jsx":"20"},{"size":901,"mtime":1608701572842,"results":"21","hashOfConfig":"22"},{"size":414,"mtime":1608701320685,"results":"23","hashOfConfig":"22"},{"size":236,"mtime":1608622487950,"results":"24","hashOfConfig":"22"},{"size":552,"mtime":1608622210523,"results":"25","hashOfConfig":"22"},{"size":489,"mtime":1608623075225,"results":"26","hashOfConfig":"22"},{"size":1219,"mtime":1608706101536,"results":"27","hashOfConfig":"22"},{"size":5283,"mtime":1608705754369,"results":"28","hashOfConfig":"22"},{"size":234,"mtime":1608623493929,"results":"29","hashOfConfig":"22"},{"size":398,"mtime":1608651880797,"results":"30","hashOfConfig":"22"},{"size":1659,"mtime":1608651880797,"results":"31","hashOfConfig":"22"},{"size":651,"mtime":1608704219843,"results":"32","hashOfConfig":"22"},{"size":697,"mtime":1608651880797,"results":"33","hashOfConfig":"22"},{"size":1058,"mtime":1608704987338,"results":"34","hashOfConfig":"22"},{"size":132,"mtime":1608651880797,"results":"35","hashOfConfig":"22"},{"size":1659,"mtime":1608651880797,"results":"36","hashOfConfig":"22"},{"size":337,"mtime":1608651880801,"results":"37","hashOfConfig":"22"},{"size":1122,"mtime":1608651571978,"results":"38","hashOfConfig":"22"},{"size":195,"mtime":1608705265805,"results":"39","hashOfConfig":"22"},{"size":888,"mtime":1608705837925,"results":"40","hashOfConfig":"22"},{"size":468,"mtime":1608706148072,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},"qcbkh7",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/neelesh/My Space/Coding/web-dev/expense_tracker/src/App.js",["87"],"import React from 'react'\nimport { Grid } from '@material-ui/core';\nimport { PushToTalkButton, PushToTalkButtonContainer, ErrorPanel } from '@speechly/react-ui';\nimport Details from './components/Details/details';\nimport Main from './components/Main/main';\n\nimport useStyles from './styles';\n\nconst App = () => {\n  const classes = useStyles();\n  return (\n    <div>\n      <Grid className={classes.grid} container spacing={0} alignItems=\"center\" justify=\"center\" styles={{height: '100vh'}}>\n        <Grid item xs={12} sm={4}>\n            <Details title=\"Income\"/>\n        </Grid>\n        <Grid item xs={12} sm={3}>\n            <Main/>\n        </Grid>\n        <Grid item xs={12} sm={4}>\n            <Details title=\"Expense\"/>\n        </Grid>\n      </Grid>\n      <PushToTalkButtonContainer>\n        <PushToTalkButton />\n        <E\n      </PushToTalkButtonContainer>\n    </div>\n  );\n}\n\nexport default App;\n","/home/neelesh/My Space/Coding/web-dev/expense_tracker/src/index.js",[],["88","89"],"/home/neelesh/My Space/Coding/web-dev/expense_tracker/src/components/Details/styles.js",[],"/home/neelesh/My Space/Coding/web-dev/expense_tracker/src/styles.js",[],"/home/neelesh/My Space/Coding/web-dev/expense_tracker/src/components/Main/styles.js",[],["90","91"],"/home/neelesh/My Space/Coding/web-dev/expense_tracker/src/components/Main/main.jsx",["92"],"/home/neelesh/My Space/Coding/web-dev/expense_tracker/src/components/Main/Form/form.jsx",["93"],"import React, {useState, useEffect, useContext} from 'react'\nimport { TextField, Typography, Grid, FormControl, InputLabel, Button, Select, MenuItem} from \"@material-ui/core\";\nimport useStyles from './styles';\nimport {ExpenseTrackerContext} from '../../../context/context';\nimport { useSpeechContext } from '@speechly/react-client';\nimport { v4 as uuidv4 } from 'uuid';\nimport { incomeCategories, expenseCategories } from '../../../constants/categories';\nimport formatDate from '../../../utils/formatDate';\nimport CustomizedSnackbar from '../../Snackbar/snackbar';\n\nconst initialState = {\n    amount: '',\n    category: '',\n    type: 'Income',\n    date: formatDate(new Date()),\n}\nconst Form = () => {\n    const classes = useStyles();\n    const [formData, setFormData] = useState(initialState); \n    const [open, setOpen] = useState(false);\n    const handleChange = (e) => {\n        e.preventDefault();\n        const {name, value} = e.target;\n        if([name] === \"date\")\n            setFormData({...formData, [name]: formatDate(value)})\n        else\n            setFormData({...formData, [name]: value})\n    }\n    const {addTransaction} = useContext(ExpenseTrackerContext);\n    const {segment} = useSpeechContext();\n    const createTransaction = () => {\n        if(Number.isNaN(Number(formData.amount)) || !formData.date.includes('-')) return;\n        const transaction = {\n            ...formData, \n            amount: Number(formData.amount),\n            id: uuidv4()\n        }\n        setOpen(true);\n        addTransaction(transaction);\n        setFormData(initialState);\n    }\n\n    useEffect(() => {\n        if(segment){\n            if(segment.intent.intent === 'add_expense') {\n                setFormData({...formData, type: 'Expense'});\n            } else if(segment.intent.intent === 'add_income'){\n                setFormData({...formData, type: 'Income'});\n            } else if(segment.isFinal && segment.intent.intent === \"create_transaction\"){\n                return createTransaction();\n            } else if(segment.isFinal && segment.intent.intent === \"cancel_transaction\"){\n                setFormData(initialState);\n            }\n\n            segment.entities.forEach((e) => {\n                const category = `${e.value.charAt(0)}${e.value.slice(1).toLowerCase()}`;\n                switch(e.type){\n                    case 'amount': \n                        setFormData({...formData, amount: e.value});\n                        break;\n                    case 'category': \n                        if(incomeCategories.map((ic) => ic.type).includes(category)){\n                            setFormData({...formData, type: 'Income', category});\n                        }else if(expenseCategories.map((ec) => ec.type).includes(category)){\n                            setFormData({...formData, type: 'Expense', category});\n                        }        \n                        break;\n                    case 'date': \n                        setFormData({...formData, date: e.value});\n                        break;\n                    default : break;\n                }\n            });\n\n            if(segment.isFinal && formData.amount && formData.category && formData.type && formData.date){\n                createTransaction();\n            }\n        }\n    }, [segment]);\n\n    const selectedCategories = formData.type === \"Income\" ? incomeCategories : expenseCategories;\n    return (\n        <Grid container spacing={2}>\n            <CustomizedSnackbar open={open} setOpen={setOpen}/>\n            <Grid item xs={12}>\n                <Typography align=\"center\" varient=\"subtitle2\" gutterBottom>\n                    {\n                        segment && segment.words.map((w) => w.value).join(\" \")\n                    } \n                </Typography>\n            </Grid>\n            <Grid item xs={6}>\n                <FormControl fullWidth>\n                    <InputLabel>Type</InputLabel>\n                    <Select name=\"type\" value={formData.type} onChange={handleChange}>\n                        <MenuItem value=\"Income\">Income</MenuItem>\n                        <MenuItem value=\"Expense\">Expense</MenuItem>\n                    </Select>\n                </FormControl>\n            </Grid>\n            <Grid item xs={6}>\n                <FormControl fullWidth>\n                    <InputLabel>Category</InputLabel>\n                    <Select name=\"category\" value={formData.category} onChange={handleChange}>\n                        {\n                            selectedCategories.map((c) => (\n                                <MenuItem key={c.type} value={c.type}>{c.type}</MenuItem>\n                            ))\n                        }\n                    </Select>\n                </FormControl>\n            </Grid>\n            <Grid item xs={6}>\n                <TextField name=\"amount\" value={formData.amount} type=\"number\" label=\"Amount\" fullWidth onChange={handleChange}/>\n            </Grid>\n            <Grid item xs={6}>\n                <TextField name=\"date\" value={formData.date} type=\"date\" label=\"Date\" fullWidth onChange={handleChange} />\n            </Grid>\n            <Button className={classes.button} variant=\"outlined\" color=\"primary\" fullWidth onClick={createTransaction}>Create</Button>\n        </Grid>\n    )\n}\n\nexport default Form;\n",["94","95"],"/home/neelesh/My Space/Coding/web-dev/expense_tracker/src/components/Main/Form/styles.js",[],"/home/neelesh/My Space/Coding/web-dev/expense_tracker/src/components/Main/List/styles.js",[],"/home/neelesh/My Space/Coding/web-dev/expense_tracker/src/components/Main/List/list.jsx",[],"/home/neelesh/My Space/Coding/web-dev/expense_tracker/src/context/contextReducer.js",[],"/home/neelesh/My Space/Coding/web-dev/expense_tracker/src/components/Details/details.jsx",[],"/home/neelesh/My Space/Coding/web-dev/expense_tracker/src/context/context.js",[],"/home/neelesh/My Space/Coding/web-dev/expense_tracker/src/context/constants.js",[],"/home/neelesh/My Space/Coding/web-dev/expense_tracker/src/constants/categories.js",[],"/home/neelesh/My Space/Coding/web-dev/expense_tracker/src/utils/formatDate.js",[],"/home/neelesh/My Space/Coding/web-dev/expense_tracker/src/useTransactions.js",[],"/home/neelesh/My Space/Coding/web-dev/expense_tracker/src/components/Snackbar/styles.js",[],"/home/neelesh/My Space/Coding/web-dev/expense_tracker/src/components/Snackbar/snackbar.jsx",[],"/home/neelesh/My Space/Coding/web-dev/expense_tracker/src/components/InfoCard.jsx",[],{"ruleId":null,"fatal":true,"severity":2,"message":"96","line":27,"column":7},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"97","replacedBy":"101"},{"ruleId":"99","replacedBy":"102"},{"ruleId":null,"fatal":true,"severity":2,"message":"103","line":18,"column":17},{"ruleId":"104","severity":1,"message":"105","line":79,"column":8,"nodeType":"106","endLine":79,"endColumn":17,"suggestions":"107"},{"ruleId":"97","replacedBy":"108"},{"ruleId":"99","replacedBy":"109"},"Parsing error: Unexpected token\n\n  25 |         <PushToTalkButton />\n  26 |         <E\n> 27 |       </PushToTalkButtonContainer>\n     |       ^\n  28 |     </div>\n  29 |   );\n  30 | }","no-native-reassign",["110"],"no-negated-in-lhs",["111"],["110"],["111"],"Parsing error: Unexpected token\n\n  16 |                 <Typography variant=\"subtitle1\" styles={{lineheight:'1.5em', marginTop: '20px'}}>\n  17 |                     <Info\n> 18 |                 </Typography>\n     |                 ^\n  19 |                 <Divider />\n  20 |                 <Form />\n  21 |                 <CardContent className={classes.cardContent}>","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'createTransaction' and 'formData'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.","ArrayExpression",["112"],["110"],["111"],"no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},"Update the dependencies array to be: [createTransaction, formData, segment]",{"range":"115","text":"116"},[3278,3287],"[createTransaction, formData, segment]"]